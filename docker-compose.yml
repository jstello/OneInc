services:
  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: ai-writing-backend
    ports:
      - "8000:8000"
    environment:
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_BASE_URL=${DEEPSEEK_BASE_URL}
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - backend-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - ai-writing-network

  # Frontend Next.js service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: runner
    container_name: ai-writing-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8000
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - ai-writing-network

  # Development service with hot reloading
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    container_name: ai-writing-backend-dev
    ports:
      - "8001:8000"
    environment:
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_BASE_URL=${DEEPSEEK_BASE_URL}
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - backend-dev-logs:/app/logs
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    profiles:
      - dev
    networks:
      - ai-writing-network

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    container_name: ai-writing-frontend-dev
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - NEXT_PUBLIC_BACKEND_URL=http://backend-dev:8000
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    depends_on:
      backend-dev:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    profiles:
      - dev
    networks:
      - ai-writing-network

# Named volumes for persistent data
volumes:
  backend-logs:
  backend-dev-logs:

# Custom network for service communication
networks:
  ai-writing-network:
    driver: bridge